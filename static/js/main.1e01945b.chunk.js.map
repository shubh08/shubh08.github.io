{"version":3,"sources":["styles/Styles.module.css","config/userData.js","components/surround/Footer.js","components/surround/Navbar.js","components/home/Landing.js","components/home/Me.js","components/home/ProjectCard.js","components/home/Projects.js","components/home/Experience.js","components/home/Education.js","components/home/Skills.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","useState","backgroundColor","bgStyle","style","className","Navbar","props","userData","firstName","isTop","setIsTop","useEffect","document","addEventListener","istop","window","scrollY","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","styles","navbarDiv","rightHeader","Landing","lastName","headline","icons","Array","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","undefined","cursor","show","map","key","target","rel","url","handle","image","split","onMouseOver","onMouseOut","Me","instaLink","instaQuerry","desc1","desc2","description1","description2","instagramId","myDescription","localStorage","getItem","JSON","parse","instaProfilePic","setInstaProfilePic","showInsta","setShowInsta","handleRequest","e","axios","get","then","response","graphql","user","profile_pic_url_hd","catch","error","console","message","aboutBg","meImg","src","alt","beginQuote","quotes","fullDescDiv1","endQuote","ProjectCard","updated_at","setUpdatedAt","projectData","name","svn_url","stargazers_count","date","Date","pushed_at","diff","getTime","hours","Math","trunc","toString","day","getDate","monthIndex","getMonth","year","getFullYear","projectCard","projectHeader","projDate","projectDates","projectDevParent","projDesc","projectDesc","cloneAndRepoBtnDiv","Button","cloneBtn","variant","Projects","gitHubLink","githubId","repos","gitHubQuerry","projectsArray","setProjectsArray","gitRepos","i","repoObj","includes","push","err","log","projectsPage","join","project","Experience","experience","expDisplay","setExpDisplay","item","Card","expMainCard","Body","expHeader","expCompanyAndTitle","expTitle","expCompany","expDateAndPlace","expDate","expPlace","deets","dottedLine","experiencePage","Education","education","eduDisplay","setEduDisplay","isFlippedObj","setIsFlippedObj","isChanged","setIsChanged","handleClick","preventDefault","tempObj","stringify","eduCardDivBothSides","isFlipped","indexOf","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","infinite","eduCardMain","Text","eduHeader","eduHeaderLeft","eduDegree","eduClg","eduHeaderRight","eduDeets","eduFooter","onClick","eduBtn","eduCardMainBack","eduBackHeaderLabel","course","Badge","courseBadge","educationPage","eduCardsParentParent","eduCardsParent","Skills","skills","skillsDisplay","setSkillsDisplay","skill","eachSkill","skillPage","skillsDisplayDiv","Home","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e01945b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectHeader\":\"Styles_projectHeader__28Vmh\",\"projectCard\":\"Styles_projectCard__3p33t\",\"projDesc\":\"Styles_projDesc__sEkQy\",\"navbarDiv\":\"Styles_navbarDiv__6rBd4\",\"creatorName\":\"Styles_creatorName__3G3KM\",\"rightHeader\":\"Styles_rightHeader__1w20b\",\"aboutBg\":\"Styles_aboutBg__1Rl1S\",\"projectsPage\":\"Styles_projectsPage__3otE_\",\"projectDevParent\":\"Styles_projectDevParent__V_Ri_\",\"projDate\":\"Styles_projDate__1fkBK\",\"cloneBtn\":\"Styles_cloneBtn__1Gtbc\",\"cloneAndRepoBtnDiv\":\"Styles_cloneAndRepoBtnDiv__2PqUL\",\"fullDescDiv1\":\"Styles_fullDescDiv1__oRt-r\",\"endQuote\":\"Styles_endQuote__3ozo-\",\"quotes\":\"Styles_quotes__2xHg5\",\"beginQuote\":\"Styles_beginQuote__U0vy5\",\"experiencePage\":\"Styles_experiencePage__1PYUb\",\"hr\":\"Styles_hr__2y2Ca\",\"expMainCard\":\"Styles_expMainCard__6Dk_C\",\"expHeader\":\"Styles_expHeader__2gJeR\",\"expDateAndPlace\":\"Styles_expDateAndPlace__3oDvb\",\"expCompanyAndTitle\":\"Styles_expCompanyAndTitle__1uCmt\",\"dottedLine\":\"Styles_dottedLine__2Qarm\",\"educationPage\":\"Styles_educationPage__QNdUY\",\"eduCardsParentParent\":\"Styles_eduCardsParentParent__yYYMz\",\"eduCardsParent\":\"Styles_eduCardsParent__2TyjN\",\"eduCardDivBothSides\":\"Styles_eduCardDivBothSides__1iFoY\",\"eduFooter\":\"Styles_eduFooter__4lfVu\",\"eduDegree\":\"Styles_eduDegree__nUHDF\",\"eduClg\":\"Styles_eduClg__3PPr5\",\"eduCardMain\":\"Styles_eduCardMain__WwTtE\",\"eduHeader\":\"Styles_eduHeader__18YL3\",\"eduHeaderRight\":\"Styles_eduHeaderRight__3q4yc\",\"eduDeets\":\"Styles_eduDeets__1jfs_\",\"courseBadge\":\"Styles_courseBadge__2FXOB\",\"eduBackHeaderLabel\":\"Styles_eduBackHeaderLabel__1miWk\",\"eduCardMainBack\":\"Styles_eduCardMainBack__222MF\",\"eachSkill\":\"Styles_eachSkill__2-CbW\",\"skillPage\":\"Styles_skillPage__2QILe\",\"meImg\":\"Styles_meImg__3XlDo\",\"aboutMeText\":\"Styles_aboutMeText__Fl-Jm\",\"textBoxStyle\":\"Styles_textBoxStyle__1ZqKm\"};","let userData ={\"firstName\":\"Shubham\",\"lastName\":\"Kumar\",\"headline\":\"Graduate Research Assistant at SJSU | Full Stack | Blockchain\",\"linkedinId\":\"shubhamkumar567\",\"githubId\":\"shubh08\",\"instagramId\":null,\"facebookId\":null,\"twitterId\":null,\"mediumId\":\"shubh08\",\"description1\":\"Greetings! I am pursuing my Masters in the department of Software Engineering(2019-2021) at San Jose State University(SJSU), USA. I have taken coursework of CMPE 273 Enterprise Distributed Systems (under Professor Simon Shim) where I am working on building a multitier, scalable, and distributed GRUBHUB application replica. Along with it, I have also taken courses CMPE 272 Enterprise Software Overview and CMPE 202 Software Systems Engineering.\",\"description2\":\"Prior to starting my graduate studies at SJSU, I worked for 3 years as a full-stack software engineer with Xoriant Solutions. I worked on developing some challenging enterprise-level, fully scalable, distributed applications for major financial institutions. I am passionate about solving complex real-world problems and providing scalable, fast, reliable solutions to them. I believe in learning through practical implementation of the concepts learned by making cool side projects.\",\"githubRepos\":null,\"skills\":\"Java, JavaScript, Python, Solidity, HTML, CSS, Node.js, React, React-Native, Redux, Spring Boot, Ethereum, Web3.js, Flask, MongoDB, MySQL, Oracle, NoSQL, AWS, GCP, Apache Kafka, Git, Agile, Docker, Jira, Hibernate, Jenkins, Junit, Maven, JMeter, Jest, Enzyme, Bootstrap, REST APIs, Redis, Windows, Linux\",\"icons\":[{\"id\":0,\"image\":\"fa-github\",\"url\":\"https://github.com/\",\"handle\":\"shubh08\",\"style\":\"socialicons\"},{\"id\":1,\"image\":\"fa-facebook\",\"url\":\"https://www.facebook.com/\",\"handle\":null,\"style\":\"socialicons\"},{\"id\":2,\"image\":\"fa-instagram\",\"url\":\"https://www.instagram.com/\",\"handle\":null,\"style\":\"socialicons\"},{\"id\":3,\"image\":\"fa-linkedin\",\"url\":\"https://www.linkedin.com/in/\",\"handle\":\"shubhamkumar567\",\"style\":\"socialicons\"},{\"id\":4,\"image\":\"fa-twitter\",\"url\":\"https://www.twitter.com/\",\"handle\":null,\"style\":\"socialicons\"},{\"id\":5,\"image\":\"fa-medium\",\"url\":\"https://www.medium.com/\",\"handle\":\"shubh08\",\"style\":\"socialicons\"}],\"experience\":[[\"Graduate Research Assistant - Blockchain\",\"San Jose State University\",\"May 2020 - Present\",\"San Jose, CA\",[\"Working on developing Smart Ethereum contracts using Solidity, Truffle suite,Web3.js, Ethereum.\",\" Building secure blockchain network DApps and creating private blockchain networks.\",\"Exploring IPFS and it's usage with Blockchain to efficiently minimize storage and computing costs on-chain, while also preserving the security of data off-chain.\"]],[\"Software Engineer Intern\",\"Tammira Inc.\",\"June 2020 - August 2020\",\"San Jose, CA\",[\"Led the development of the Tammira beauty mobile video app for learners and artists/influencers to match up/find, connect, book, and engage with each other.\",\"Developed one-to-one live onboarding, video chat, booking, and other features for influencers to connect with their followers.\",\"Integrated Apple single-sign in, and remote notification services.\"]],[\"Software Engineer\",\"Xoriant\",\"October 2016\",\"June 2019\",[\"Designed and developed the GDPR framework to help Citi Bank to comply with GDPR regulations.\\nShortened check-in time by 80% by automating the compile process of Java Batches to run directly on Build servers.\",\"Improved application performance by 30% by optimizing fetching of Hibernate entities and implemented RESTful APIs. Developed backend modules for handling encryption/random key-token generation and created UI dashboards.\",\"Improved performance of the application by integrating EHCache that decreased time to load records by 40%. Reduced the deployment time by 70% by automating the build and deployment process using Jenkins.\"]]],\"education\":[[\"Master of Science\",\"Software Engineering\",\"San Jose State University\",\"August 2019\",\"May 2021\",\"San Jose, CA\",[\"\",\"\",\"\"],[\"Enterprise Distributed Systems\",\" Enterprise Software Overview\",\" Software Systems Engineering\",\" Cloud\\nComputing\",\" Machine Learning\"]],[\"Bachelor of Engineering\",\"Computer Science\",\"University of Pune\",\"August 2012\",\"May 2016\",\"Pune, India\",[\"\",\"\",\"\"],[\"Data Structures and Algorithms\",\" Operating Systems\",\" Compiler Design\",\" Object Oriented Design\",\" Computer\",\" Networks\",\" Computer Architecture\",\" Database Design\"]]],\"repos\":[\"Grubhub-Prototype\",\"TwitterSJSU\",\"MTaaS\",\"smartMTaaSChatbot\",\"Smart-MOM\",\"smart-eye-face-recog\"],\"projectDates\":{\"Grubhub-Prototype\":\"August 2019 - November 2019\",\"TwitterSJSU\":\"September 2019 - November 2019\",\"MTaaS\":\"February 2020 - May 2020\",\"smartMTaaSChatbot\":\"February 2020 - May 2020\",\"Smart-MOM\":\"October 2019 – December 2019\",\"smart-eye-face-recog\":\"April 2019 - May 2019\"},\"projectDesc\":{\"Grubhub-Prototype\":[\"Built a scalable, distributed food ordering website for users to order food and deployed it on Amazon EC2 instance.\",\"Improved server performance by 25% by using connection pooling and Kafka messaging queues.\\nUsed JWT tokens, Passport.js for authentication and session management and Mocha and JMeter for testing.\"],\"TwitterSJSU\":[\"Developed a multitier Twitter replica using MERN stack and built scalability to handle at least 10,000 users and tweets.\",\"Optimized performance of the application using connection pooling and SQL caching with Redis.\"],\"MTaaS\":[\"Developed a Software as a Service platform for freelance testers to connect and work with managers.\",\"Integrated on-demand Amazon Device Farm and virtual simulators for testers to deploy and test their scripts. Created modules for project join request/approval/rejection, bug management, test result dashboard, and billing.\"],\"smartMTaaSChatbot\":[\"Developed a smart chatbot, that can handle user queries regarding MTaaS application (a mobile testing application). Used OpenAI GPT2 transformer models to find optimum answers to user queries.\",\"Integrated voice search and result retrieval from the internet for unknown questions based on user feedback. Implemented a feedback loop to train model through user answers for unknown questions.\"],\"Smart-MOM\":[\"Developed smart minutes of meeting recorder application, that records meeting conversations and uses Machine learning models to extract summary and other metrics from the conversations.\",\"Built a model using “Bidirectional Encoder Representations from Transformers” that generates minutes of meeting automatically. Captured tasks for an individual through Name Entity Recognition model using spacy API.\"],\"smart-eye-face-recog\":[\"Developed a face recognition web application using React, NodeJS, ExpressJS and PostgreSQL as a side project. Dockerized the application and deployed its image on the Heroku.\",\"Integrated the Clarifai face detection model into application and parsed the model response to highlight human face in the images selected by the users and ranked users according to the number of attempts made.\"]}}\n module.exports= userData;","import React, { useState } from \"react\";\n\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return <footer style={bgStyle} className=\"mt-auto py-3 text-center\"></footer>;\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Navbar = (props) => {\n  let { firstName } = userData;\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const istop = window.scrollY < 200;\n      if (istop !== isTop) {\n        setIsTop(istop);\n      }\n    });\n  }, [isTop]);\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\n      } `}\n    >\n      <a\n        className=\"navbar-brand\"\n        href={process.env.PUBLIC_URL + \"/index.html#home\"}\n      >\n        Home\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <div className={styles.navbarDiv}>\n          <div>\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#aboutme\"}\n                >\n                  Me\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#experience\"}\n                >\n                  Experience\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#projects\"}\n                >\n                  Projects\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#education\"}\n                >\n                  Education\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#skills\"}\n                >\n                  Skills\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className={styles.rightHeader}></div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport Typist from \"react-typist\";\nimport userData from \"../../config/userData\";\n\nconst Landing = (props) => {\n  let { firstName, lastName, headline, icons } = userData;\n  icons = icons == null ? [] : icons;\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1\">\n            {(firstName == null ? \"\" : firstName) +\n              \" \" +\n              (lastName == undefined ? \"\" : lastName)}\n          </h1>\n          <Typist className=\"lead\" cursor={{ show: false }}>\n            {\" \"}\n            {headline}\n          </Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) =>\n              icon[\"handle\"] != null && icon[\"handle\"] != \"\" ? (\n                <a\n                  key={icon.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={icon.url + \"\" + icon.handle}\n                  aria-label={`My ${icon.image.split(\"-\")[1]}`}\n                >\n                  <i\n                    className={`fab ${icon.image}  fa-3x ${\n                      hoverstatus[icon.id]\n                    }`}\n                    onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                    onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                  />\n                </a>\n              ) : null\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Me = () => {\n  let {\n    instaLink,\n    instaQuerry,\n    description1,\n    description2,\n    instagramId,\n  } = userData;\n  let desc1, desc2;\n  let myDescription = [];\n\n  instaLink = \"https://www.instagram.com/\";\n  instaQuerry = \"/?__a=1\";\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    desc1 = JSON.parse(localStorage.getItem(\"userData\"))[\"description1\"];\n    desc2 = JSON.parse(localStorage.getItem(\"userData\"))[\"description2\"];\n    myDescription =\n      (desc1 == \"\" || desc1 == null) && (desc2 == \"\" || desc2 == null)\n        ? myDescription\n        : [desc1, desc2];\n    instagramId =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == \"\"\n        ? instagramId\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"];\n  } else {\n    myDescription =\n      (description1 == \"\" || description1 == null) &&\n      (description2 == \"\" || description1 == null)\n        ? myDescription\n        : [description1, description2];\n  }\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\n  const [showInsta, setShowInsta] = useState(true);\n\n  useEffect(() => {\n    if (showInsta) {\n      handleRequest();\n    } else {\n      setInstaProfilePic(\n        \"https://lh3.googleusercontent.com/proxy/rHjhatFG9wFQciNqzUG19Wc7NoBb4RidNURhduWyvs5euim-Uc6unJD0qeQI9qSDAwbSwB_ZEl70E9eBiW9Ee2A\"\n      );\n    }\n  }, [showInsta, instagramId]);\n\n  const handleRequest = (e) => {\n    axios\n      .get(instaLink + instagramId + instaQuerry)\n      .then((response) => {\n        //console.log(\"response.data\", response.data);\n        return setInstaProfilePic(\n          response.data.graphql.user.profile_pic_url_hd\n        );\n      })\n      .catch((error) => {\n        setShowInsta(false);\n        return console.error(error.message);\n      });\n  };\n\n  return (\n    <div id=\"aboutme\" className={styles.aboutBg}>\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          {showInsta && (\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\n              <img\n                className={styles.meImg}\n                src={instaProfilePic}\n                alt=\"profilepicture\"\n              />\n            </div>\n          )}\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\n            <h1 className=\"display-4 mb-5 text-center\"> Me</h1>\n            <div className={styles.beginQuote}>\n              <h1 className={styles.quotes}>⅂</h1>\n            </div>\n            <div className={styles.fullDescDiv1}>{myDescription[0]}</div>\n            <br />\n            <div className={styles.fullDescDiv1}>{myDescription[1]}</div>\n            <div className={styles.endQuote}>\n              <h1 className={styles.quotes}>⅃</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Me;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport classes from \"../../styles/Styles.module.css\";\n\nconst ProjectCard = (props) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n  const { name, svn_url, stargazers_count } = props.projectData;\n\n  useEffect(() => {\n    const date = new Date(props.projectData.pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      return setUpdatedAt(`${hours.toString()} hours ago`);\n    } else {\n      const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      const day = date.getDate();\n      const monthIndex = date.getMonth();\n      const year = date.getFullYear();\n      return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n    }\n  }, [props.projectData.pushed_at]);\n\n  return (\n    <div className=\"col-md-6\">\n      <div>\n        <div className={styles.projectCard}>\n          <div className=\"card-body\">\n            <div className={styles.projectHeader}>\n              <h6>{name} </h6>\n              <h6 className={styles.projDate}>{props.projectDates[name]}</h6>\n            </div>\n            <hr />\n            <div className={styles.projectDevParent}>\n              <ul>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][0]\n                      : null}\n                  </div>\n                </li>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][1]\n                      : null}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div className={styles.cloneAndRepoBtnDiv}>\n              <Button\n                href={`${svn_url}/archive/master.zip`}\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> Clone Project\n              </Button>\n              <Button\n                href={svn_url}\n                target=\" _blank\"\n                variant=\"success\"\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> View Repo\n              </Button>\n            </div>\n            <hr />\n            <p className=\"card-text\">\n              <span className=\"text-dark card-link mr-4\">\n                <i className=\"fab fa-github\" /> Stars{\" \"}\n                <span className=\"badge badge-dark\">{stargazers_count}</span>\n              </span>\n              <small className=\"text-muted\">Updated {updated_at}</small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Projects = () => {\n  let {\n    gitHubLink,\n    githubId,\n    gitHubQuerry,\n    repos,\n    projectDesc,\n    projectDates,\n  } = userData;\n  const [projectsArray, setProjectsArray] = useState([]);\n  gitHubLink = \"https://api.github.com/users/\";\n  gitHubQuerry = \"/repos\";\n  useEffect(() => {\n    axios\n      .get(gitHubLink + githubId + gitHubQuerry)\n      .then((response) => {\n        let gitRepos = [];\n        for (let i in response.data) {\n          let repoObj = response.data[i];\n          if (repos.includes(repoObj[\"name\"])) gitRepos.push(repoObj);\n        }\n        setProjectsArray(gitRepos);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div id=\"projects\" className={[styles.projectsPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Projects</h1>\n        <div className=\"row\">\n          {projectsArray.map((project) => (\n            <ProjectCard\n              projectData={project}\n              projectDesc={projectDesc}\n              projectDates={projectDates}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Experience = () => {\n  let { experience } = userData;\n  const [expDisplay, setExpDisplay] = useState([]);\n\n  useEffect(() => {\n    //console.log(\"experience\", experience);\n    setExpDisplay(\n      experience == null\n        ? null\n        : experience.map((item) => {\n            //console.log(\"experience item\", item);\n            return (\n              <>\n                <Card className={styles.expMainCard}>\n                  <Card.Body>\n                    <div className={styles.expHeader}>\n                      <div className={styles.expCompanyAndTitle}>\n                        <div className={styles.expTitle}>\n                          <b>{item[0]}</b>\n                        </div>\n                        ,&nbsp;\n                        <div className={styles.expCompany}>{item[1]}</div>\n                      </div>\n                      <div className={styles.expDateAndPlace}>\n                        <div className={styles.expDate}>{item[2]} &nbsp;</div>\n                        <div>{\"|\"}</div>\n                        <div className={styles.expPlace}> &nbsp; {item[3]}</div>\n                      </div>\n                    </div>\n                    <hr />\n                    <ul>\n                      {item[4].map((deets) => {\n                        return <li>{deets}</li>;\n                      })}\n                    </ul>\n                  </Card.Body>\n                </Card>\n                <div className={styles.dottedLine}>\n                  <div>.</div>\n                  <div>.</div>\n                  <div>.</div>\n                </div>\n              </>\n            );\n          })\n    );\n  }, []);\n\n  return (\n    <>\n      <div id=\"experience\" className={[styles.experiencePage].join(\",\")}>\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">Experience</h1>\n          <div className=\"row\">{expDisplay}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Experience;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Education = () => {\n  let { education } = userData;\n  const [eduDisplay, setEduDisplay] = useState([]);\n  const [isFlippedObj, setIsFlippedObj] = useState({});\n  const [isChanged, setIsChanged] = useState();\n\n  const handleClick = (e, i) => {\n    e.preventDefault();\n    let tempObj = isFlippedObj;\n    tempObj[i] = !tempObj[i];\n    setIsFlippedObj(tempObj);\n    setIsChanged(JSON.stringify(tempObj));\n  };\n\n  useEffect(() => {\n    let tempObj = {};\n    for (let i in education) {\n      tempObj[i] = false;\n    }\n    setIsFlippedObj(tempObj);\n  }, []); //to set original flip state\n\n  useEffect(() => {\n    //console.log(\"education\", education);\n    setEduDisplay(\n      education == null\n        ? null\n        : education.map((item) => {\n            //console.log(\"education item\", item);\n            return (\n              <div className={styles.eduCardDivBothSides}>\n                <ReactCardFlip\n                  isFlipped={isFlippedObj[education.indexOf(item)]}\n                  flipDirection=\"horizontal\"\n                  flipSpeedBackToFront=\"0.3\"\n                  flipSpeedFrontToBack=\"0.3\"\n                  infinite=\"true\"\n                >\n                  <div>\n                    <Card>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          <div className={styles.eduHeader}>\n                            <div className={styles.eduHeaderLeft}>\n                              <div className={styles.eduDegree}>\n                                <b>\n                                  {item[0]}, {item[1]}\n                                </b>\n                              </div>\n                              <div className={styles.eduClg}>{item[2]}</div>\n                            </div>\n                            <div className={styles.eduHeaderRight}>\n                              <div>\n                                {item[3]} - {item[4]}\n                              </div>\n                              <div> {item[5]}</div>\n                            </div>\n                          </div>\n                        </Card.Text>\n                        <Card.Text>\n                          <ul className={styles.eduDeets}>\n                            {item[6].map((deets) => {\n                              return <li>{deets}</li>;\n                            })}\n                          </ul>\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) =>\n                                handleClick(e, education.indexOf(item))\n                              }\n                              className={styles.eduBtn}\n                            >\n                              See Courses\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n\n                  <div>\n                    <Card className={styles.eduCardMainBack}>\n                      <div className={styles.eduBackHeaderLabel}>\n                        <h4>Courses</h4>\n                      </div>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          {item[7].map((course) => {\n                            return (\n                              <Badge className={styles.courseBadge}>\n                                {course}\n                              </Badge>\n                            );\n                          })}\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) => {\n                                handleClick(e, education.indexOf(item));\n                              }}\n                              className={styles.eduBtn}\n                            >\n                              Back\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                </ReactCardFlip>\n              </div>\n            );\n          })\n    );\n  }, [isChanged]);\n\n  return (\n    <div id=\"education\" className={[styles.educationPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Education</h1>\n      </div>\n      <div className={styles.eduCardsParentParent}>\n        <div className={styles.eduCardsParent}>{eduDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n","import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Skills = () => {\n  let { skills } = userData;\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    skills =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == \"\"\n        ? skills\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"].split(\",\");\n  } else skills = skills.split(\",\");\n  const [skillsDisplay, setSkillsDisplay] = useState([]);\n\n  useEffect(() => {\n    setSkillsDisplay(\n      skills.map((skill) => {\n        return <Badge className={styles.eachSkill}>{skill}</Badge>;\n      })\n    );\n  }, []);\n  return (\n    <div id=\"skills\" className={[styles.skillPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Skills</h1>\n\n        <div className={styles.skillsDisplayDiv}>{skillsDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport Landing from \"../components/home/Landing\";\nimport Me from \"../components/home/Me\";\nimport Projects from \"../components/home/Projects\";\nimport Experience from \"../components/home/Experience\";\nimport Education from \"../components/home/Education\";\nimport Skills from \"../components/home/Skills\";\n\nconst Home = (props) => {\n  return (\n    <>\n      <Landing isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Me isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Experience\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Projects isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Education\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Skills isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport Footer from \"./components/surround/Footer\";\nimport Navbar from \"./components/surround/Navbar\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Home />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}